/*
 * This file is generated by jOOQ.
 */
package stroom.analytics.impl.db.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.analytics.impl.db.jooq.tables.ExecutionSchedule;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ExecutionScheduleRecord extends UpdatableRecordImpl<ExecutionScheduleRecord> implements Record12<Integer, String, Boolean, String, String, String, Boolean, Long, Long, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>stroom.execution_schedule.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.execution_schedule.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>stroom.execution_schedule.enabled</code>.
     */
    public void setEnabled(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>stroom.execution_schedule.node_name</code>.
     */
    public void setNodeName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.node_name</code>.
     */
    public String getNodeName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>stroom.execution_schedule.schedule_type</code>.
     */
    public void setScheduleType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.schedule_type</code>.
     */
    public String getScheduleType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>stroom.execution_schedule.expression</code>.
     */
    public void setExpression(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.expression</code>.
     */
    public String getExpression() {
        return (String) get(5);
    }

    /**
     * Setter for <code>stroom.execution_schedule.contiguous</code>.
     */
    public void setContiguous(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.contiguous</code>.
     */
    public Boolean getContiguous() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>stroom.execution_schedule.start_time_ms</code>.
     */
    public void setStartTimeMs(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.start_time_ms</code>.
     */
    public Long getStartTimeMs() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>stroom.execution_schedule.end_time_ms</code>.
     */
    public void setEndTimeMs(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.end_time_ms</code>.
     */
    public Long getEndTimeMs() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>stroom.execution_schedule.doc_type</code>.
     */
    public void setDocType(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.doc_type</code>.
     */
    public String getDocType() {
        return (String) get(9);
    }

    /**
     * Setter for <code>stroom.execution_schedule.doc_uuid</code>.
     */
    public void setDocUuid(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.doc_uuid</code>.
     */
    public String getDocUuid() {
        return (String) get(10);
    }

    /**
     * Setter for <code>stroom.execution_schedule.run_as_user_uuid</code>.
     */
    public void setRunAsUserUuid(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>stroom.execution_schedule.run_as_user_uuid</code>.
     */
    public String getRunAsUserUuid() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, Boolean, String, String, String, Boolean, Long, Long, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Integer, String, Boolean, String, String, String, Boolean, Long, Long, String, String, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.ID;
    }

    @Override
    public Field<String> field2() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.NAME;
    }

    @Override
    public Field<Boolean> field3() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.ENABLED;
    }

    @Override
    public Field<String> field4() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.NODE_NAME;
    }

    @Override
    public Field<String> field5() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.SCHEDULE_TYPE;
    }

    @Override
    public Field<String> field6() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.EXPRESSION;
    }

    @Override
    public Field<Boolean> field7() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.CONTIGUOUS;
    }

    @Override
    public Field<Long> field8() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.START_TIME_MS;
    }

    @Override
    public Field<Long> field9() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.END_TIME_MS;
    }

    @Override
    public Field<String> field10() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.DOC_TYPE;
    }

    @Override
    public Field<String> field11() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.DOC_UUID;
    }

    @Override
    public Field<String> field12() {
        return ExecutionSchedule.EXECUTION_SCHEDULE.RUN_AS_USER_UUID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Boolean component3() {
        return getEnabled();
    }

    @Override
    public String component4() {
        return getNodeName();
    }

    @Override
    public String component5() {
        return getScheduleType();
    }

    @Override
    public String component6() {
        return getExpression();
    }

    @Override
    public Boolean component7() {
        return getContiguous();
    }

    @Override
    public Long component8() {
        return getStartTimeMs();
    }

    @Override
    public Long component9() {
        return getEndTimeMs();
    }

    @Override
    public String component10() {
        return getDocType();
    }

    @Override
    public String component11() {
        return getDocUuid();
    }

    @Override
    public String component12() {
        return getRunAsUserUuid();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Boolean value3() {
        return getEnabled();
    }

    @Override
    public String value4() {
        return getNodeName();
    }

    @Override
    public String value5() {
        return getScheduleType();
    }

    @Override
    public String value6() {
        return getExpression();
    }

    @Override
    public Boolean value7() {
        return getContiguous();
    }

    @Override
    public Long value8() {
        return getStartTimeMs();
    }

    @Override
    public Long value9() {
        return getEndTimeMs();
    }

    @Override
    public String value10() {
        return getDocType();
    }

    @Override
    public String value11() {
        return getDocUuid();
    }

    @Override
    public String value12() {
        return getRunAsUserUuid();
    }

    @Override
    public ExecutionScheduleRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord value3(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord value4(String value) {
        setNodeName(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord value5(String value) {
        setScheduleType(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord value6(String value) {
        setExpression(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord value7(Boolean value) {
        setContiguous(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord value8(Long value) {
        setStartTimeMs(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord value9(Long value) {
        setEndTimeMs(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord value10(String value) {
        setDocType(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord value11(String value) {
        setDocUuid(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord value12(String value) {
        setRunAsUserUuid(value);
        return this;
    }

    @Override
    public ExecutionScheduleRecord values(Integer value1, String value2, Boolean value3, String value4, String value5, String value6, Boolean value7, Long value8, Long value9, String value10, String value11, String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExecutionScheduleRecord
     */
    public ExecutionScheduleRecord() {
        super(ExecutionSchedule.EXECUTION_SCHEDULE);
    }

    /**
     * Create a detached, initialised ExecutionScheduleRecord
     */
    public ExecutionScheduleRecord(Integer id, String name, Boolean enabled, String nodeName, String scheduleType, String expression, Boolean contiguous, Long startTimeMs, Long endTimeMs, String docType, String docUuid, String runAsUserUuid) {
        super(ExecutionSchedule.EXECUTION_SCHEDULE);

        setId(id);
        setName(name);
        setEnabled(enabled);
        setNodeName(nodeName);
        setScheduleType(scheduleType);
        setExpression(expression);
        setContiguous(contiguous);
        setStartTimeMs(startTimeMs);
        setEndTimeMs(endTimeMs);
        setDocType(docType);
        setDocUuid(docUuid);
        setRunAsUserUuid(runAsUserUuid);
        resetChangedOnNotNull();
    }
}
