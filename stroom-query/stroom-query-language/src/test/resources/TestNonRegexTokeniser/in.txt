before "test of inner \" strings " ${param1} and ${param2} after
-----
before "test of inner \" strings " after
-----
"test of inner \" strings " after
-----
 "test of inner \" strings " after
-----
before "test of inner \" strings "
-----
before "test of inner \" strings "
-----
before 'test of inner \' strings ' after
-----
'test of inner \' strings ' after
-----
 'test of inner \' strings ' after
-----
before 'test of inner \' strings '
-----
before 'test of inner \' strings '
-----
test end slash /
-----
test end comment //
-----
test end comment /*
-----
test end comment /**/
-----
test ' comments // in strings \' strings '
-----
test ' comments /* in */ strings \' strings '
-----
test ' comments /* in strings \' strings '
-----
test ' comments in */ strings \' strings '
-----
where this = that
and foo = 'test of inner \' strings '
select
-----
from "Test Index"
where UserId = user5 and Description = e0567
and EventTime <= 2000-01-01T00:00:00.000Z
and EventTime >= 2016-01-02T00:00:00.000Z
-----
from "Test Index"
where UserId = user5 and Description = e0567
and EventTime <= now()
-----
from "Test Index"
where UserId = user5 and Description = e0567
and EventTime <= now() + 3d
-----
from "Test Index"
where UserId = user5 and Description = e0567
and EventTime <= now() + 3
-----
from Events
where Name = "Start"
-----
from "index_view" // view
// add a where
where EventTime > 2000-01-01T00:00:00.000Z
// and StreamId = 1210
eval UserId = upperCase(UserId)
eval FirstName = substringBefore(UserId, '.')
eval count = count()
group by StreamId
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", UserId as "User Id", FirstName, count
limit 10
-----
from "index_view" // view
// add a where
where EventTime > 2000-01-01T00:00:00.000Z
/* this
 * is a multi line
 * block
 * comment ***
 */
eval UserId = upperCase(UserId)
eval FirstName = substringBefore(UserId, '.')
eval count = count()
group by StreamId
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", UserId as "User Id", FirstName, count
limit 10
-----
"index_view" // view
// add a where
| where EventTime > 2000-01-01T00:00:00.000Z
//| and StreamId = 1210
| eval UserId = upperCase(UserId)
| eval FirstName = first(substringBefore(UserId, '.'))
-----
/*
doc comment
*/

from "index_view" // view
// add a where
where EventTime > 2000-01-01T00:00:00.000Z
// and StreamId = 1210
eval UserId = upperCase(UserId)
eval FirstName = UserId//lowerCase(substringBefore(UserId, '.'))
// eval FirstName = top(FirstName)
eval count = count()
// group by StreamId
sort by StreamId
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", UserId as "User Id", FirstName, count
limit 10
-----
/*
doc comment
*/

from "index_view" // view
// add a where
where EventTime > 2000-01-01T00:00:00.000Z
and StreamId=1210
eval UserId = upperCase(UserId)
eval FirstName = UserId//lowerCase(substringBefore(UserId, '.'))
// eval FirstName = top(FirstName)
eval count = count()
// group by StreamId
sort by StreamId
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", UserId as "User Id", FirstName, count
limit 10
-----
/*
doc comment
*/

from "index_view" // view
// add a where
EventTime > 2023-05-05T00:00:00.000Z and  (Field = 'blah' or Field = 'blip')
and StreamId=1210
eval UserId = upperCase(UserId)
eval FirstName = UserId//lowerCase(substringBefore(UserId, '.'))
// eval FirstName = top(FirstName)
eval count = count()
// group by StreamId
sort by StreamId
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", UserId as "User Id", FirstName, count
limit 10
-----
/*
doc comment
*/

from "index_view" // view
// add a where
where EventTime > 2023-05-05T00:00:00.000Z and  (Field = 'blah' or Field = 'blip')
and StreamId=1210
eval UserId = upperCase(UserId)
eval FirstName = UserId//lowerCase(substringBefore(UserId, '.'))
// eval FirstName = top(FirstName)
eval count = count()
// group by StreamId
sort by StreamId
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", UserId as "User Id", FirstName, count
limit 10
-----
from "index_view"
where EventTime between 2022-05-05T00:00:00.000Z and 2023-05-05T00:00:00.000Z
select StreamId
-----
from "index_view"
where "My Field" = "Field Name"
select StreamId
-----
from "index_view"
where 'My Field' = 'Field Name'
select StreamId
-----
from "index_view"
where 'My Field' = '"Field Name"'
select StreamId
-----
from "index_view"
where 'My Field' = 2022-01-01T00:00:00.000Z
select StreamId
-----
from "index_view"
where 'My Field' = 2022-01-01T00:00:00.000Z - 1w
select StreamId
-----
from "index_view"
where 'My Field' between 2022-01-01T00:00:00.000Z + 1d and 2022-01-01T00:00:00.000Z + 5d
select StreamId
-----
from "index_view"
where 'My Field' between now()-1w and now()
select StreamId
-----
from "index_view"
where StreamId in (123, 456)
select StreamId
-----
from "index_view"
where StreamId in dictionary "my_dictionary"
select StreamId
-----
// From example index
from View
// eval MaxD=max(parseDuration('PT10M'))
where EventTime < now() - 2dx
select StreamId, EventId, Feed
-----
from 'Test Index'
where 'my.name' = '"foo bar"'
eval UserId =
select UserId
-----
from 'Test Index'
where EventTime > 2023-05-05T00:00:00.000Z and  (Field = 'blah' or Field = 'blip')
eval idx1 = indexOf(UserId, 'user1')
eval idx2 = indexOf(UserId, 'user')
eval test = if(and(idx1 >= 0, idx2 >= 0), 1, 0)
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", Status, UserId as "User Id", test
-----
from 'Test Index'
where EventTime > 2023-05-05T00:00:00.000Z and  (Field = 'blah' or Field = 'blip')
eval idx1 = indexOf(UserId, 'user1')
eval idx2 = indexOf(UserId, 'user')
eval bool = and(idx1 >= 0, idx2 >= 0)
eval test = if(bool, 1, 0)
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", Status, UserId as "User Id", test