/*
 * This file is generated by jOOQ.
 */
package stroom.processor.impl.db.jooq;


import stroom.processor.impl.db.jooq.tables.Processor;
import stroom.processor.impl.db.jooq.tables.ProcessorFeed;
import stroom.processor.impl.db.jooq.tables.ProcessorFilter;
import stroom.processor.impl.db.jooq.tables.ProcessorFilterTracker;
import stroom.processor.impl.db.jooq.tables.ProcessorNode;
import stroom.processor.impl.db.jooq.tables.ProcessorTask;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Stroom extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>stroom</code>
     */
    public static final Stroom STROOM = new Stroom();

    /**
     * The table <code>stroom.processor</code>.
     */
    public final Processor PROCESSOR = Processor.PROCESSOR;

    /**
     * The table <code>stroom.processor_feed</code>.
     */
    public final ProcessorFeed PROCESSOR_FEED = ProcessorFeed.PROCESSOR_FEED;

    /**
     * The table <code>stroom.processor_filter</code>.
     */
    public final ProcessorFilter PROCESSOR_FILTER = ProcessorFilter.PROCESSOR_FILTER;

    /**
     * The table <code>stroom.processor_filter_tracker</code>.
     */
    public final ProcessorFilterTracker PROCESSOR_FILTER_TRACKER = ProcessorFilterTracker.PROCESSOR_FILTER_TRACKER;

    /**
     * The table <code>stroom.processor_node</code>.
     */
    public final ProcessorNode PROCESSOR_NODE = ProcessorNode.PROCESSOR_NODE;

    /**
     * The table <code>stroom.processor_task</code>.
     */
    public final ProcessorTask PROCESSOR_TASK = ProcessorTask.PROCESSOR_TASK;

    /**
     * No further instances allowed
     */
    private Stroom() {
        super("stroom", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Processor.PROCESSOR,
            ProcessorFeed.PROCESSOR_FEED,
            ProcessorFilter.PROCESSOR_FILTER,
            ProcessorFilterTracker.PROCESSOR_FILTER_TRACKER,
            ProcessorNode.PROCESSOR_NODE,
            ProcessorTask.PROCESSOR_TASK
        );
    }
}
