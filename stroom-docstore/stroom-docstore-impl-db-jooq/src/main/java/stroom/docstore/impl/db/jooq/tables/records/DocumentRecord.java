/*
 * This file is generated by jOOQ.
 */
package stroom.docstore.impl.db.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.docstore.impl.db.jooq.tables.Document;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DocumentRecord extends UpdatableRecordImpl<DocumentRecord> implements Record6<Long, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>stroom.document.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.document.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>stroom.document.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.document.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>stroom.document.uuid</code>.
     */
    public void setUuid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.document.uuid</code>.
     */
    public String getUuid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>stroom.document.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.document.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>stroom.document.unique_name</code>.
     */
    public void setUniqueName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.document.unique_name</code>.
     */
    public String getUniqueName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>stroom.document.version</code>.
     */
    public void setVersion(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.document.version</code>.
     */
    public String getVersion() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Document.DOCUMENT.ID;
    }

    @Override
    public Field<String> field2() {
        return Document.DOCUMENT.TYPE;
    }

    @Override
    public Field<String> field3() {
        return Document.DOCUMENT.UUID;
    }

    @Override
    public Field<String> field4() {
        return Document.DOCUMENT.NAME;
    }

    @Override
    public Field<String> field5() {
        return Document.DOCUMENT.UNIQUE_NAME;
    }

    @Override
    public Field<String> field6() {
        return Document.DOCUMENT.VERSION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getType();
    }

    @Override
    public String component3() {
        return getUuid();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getUniqueName();
    }

    @Override
    public String component6() {
        return getVersion();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getType();
    }

    @Override
    public String value3() {
        return getUuid();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getUniqueName();
    }

    @Override
    public String value6() {
        return getVersion();
    }

    @Override
    public DocumentRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DocumentRecord value2(String value) {
        setType(value);
        return this;
    }

    @Override
    public DocumentRecord value3(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public DocumentRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public DocumentRecord value5(String value) {
        setUniqueName(value);
        return this;
    }

    @Override
    public DocumentRecord value6(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public DocumentRecord values(Long value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocumentRecord
     */
    public DocumentRecord() {
        super(Document.DOCUMENT);
    }

    /**
     * Create a detached, initialised DocumentRecord
     */
    public DocumentRecord(Long id, String type, String uuid, String name, String uniqueName, String version) {
        super(Document.DOCUMENT);

        setId(id);
        setType(type);
        setUuid(uuid);
        setName(name);
        setUniqueName(uniqueName);
        setVersion(version);
        resetChangedOnNotNull();
    }
}
