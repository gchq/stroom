/*
 * This file is generated by jOOQ.
 */
package stroom.docstore.impl.db.jooq;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import stroom.docstore.impl.db.jooq.tables.Document;
import stroom.docstore.impl.db.jooq.tables.DocumentEntry;
import stroom.docstore.impl.db.jooq.tables.records.DocumentEntryRecord;
import stroom.docstore.impl.db.jooq.tables.records.DocumentRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * stroom.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DocumentRecord> KEY_DOCUMENT_DOCUMENT_UNIQUE_NAME_IDX = Internal.createUniqueKey(Document.DOCUMENT, DSL.name("KEY_document_document_unique_name_idx"), new TableField[] { Document.DOCUMENT.UNIQUE_NAME }, true);
    public static final UniqueKey<DocumentRecord> KEY_DOCUMENT_DOCUMENT_UUID_IDX = Internal.createUniqueKey(Document.DOCUMENT, DSL.name("KEY_document_document_uuid_idx"), new TableField[] { Document.DOCUMENT.UUID }, true);
    public static final UniqueKey<DocumentRecord> KEY_DOCUMENT_PRIMARY = Internal.createUniqueKey(Document.DOCUMENT, DSL.name("KEY_document_PRIMARY"), new TableField[] { Document.DOCUMENT.ID }, true);
    public static final UniqueKey<DocumentEntryRecord> KEY_DOCUMENT_ENTRY_DOCUMENT_FK_DOCUMENT_ID_OATH = Internal.createUniqueKey(DocumentEntry.DOCUMENT_ENTRY, DSL.name("KEY_document_entry_document_fk_document_id_oath"), new TableField[] { DocumentEntry.DOCUMENT_ENTRY.FK_DOCUMENT_ID, DocumentEntry.DOCUMENT_ENTRY.ENTRY }, true);
    public static final UniqueKey<DocumentEntryRecord> KEY_DOCUMENT_ENTRY_PRIMARY = Internal.createUniqueKey(DocumentEntry.DOCUMENT_ENTRY, DSL.name("KEY_document_entry_PRIMARY"), new TableField[] { DocumentEntry.DOCUMENT_ENTRY.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DocumentEntryRecord, DocumentRecord> DOCUMENT_ENTRY_FK_DOCUMENT_ID = Internal.createForeignKey(DocumentEntry.DOCUMENT_ENTRY, DSL.name("document_entry_fk_document_id"), new TableField[] { DocumentEntry.DOCUMENT_ENTRY.FK_DOCUMENT_ID }, Keys.KEY_DOCUMENT_PRIMARY, new TableField[] { Document.DOCUMENT.ID }, true);
}
