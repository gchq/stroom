/*
 * This file is generated by jOOQ.
 */
package stroom.security.impl.db.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.security.impl.db.jooq.tables.ApiKey;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ApiKeyRecord extends UpdatableRecordImpl<ApiKeyRecord> implements Record14<Integer, Integer, Long, String, Long, String, String, String, String, Long, String, String, Boolean, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>stroom.api_key.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.api_key.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.api_key.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.api_key.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>stroom.api_key.create_time_ms</code>.
     */
    public void setCreateTimeMs(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.api_key.create_time_ms</code>.
     */
    public Long getCreateTimeMs() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>stroom.api_key.create_user</code>.
     */
    public void setCreateUser(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.api_key.create_user</code>.
     */
    public String getCreateUser() {
        return (String) get(3);
    }

    /**
     * Setter for <code>stroom.api_key.update_time_ms</code>.
     */
    public void setUpdateTimeMs(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.api_key.update_time_ms</code>.
     */
    public Long getUpdateTimeMs() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>stroom.api_key.update_user</code>.
     */
    public void setUpdateUser(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.api_key.update_user</code>.
     */
    public String getUpdateUser() {
        return (String) get(5);
    }

    /**
     * Setter for <code>stroom.api_key.fk_owner_uuid</code>.
     */
    public void setFkOwnerUuid(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>stroom.api_key.fk_owner_uuid</code>.
     */
    public String getFkOwnerUuid() {
        return (String) get(6);
    }

    /**
     * Setter for <code>stroom.api_key.api_key_hash</code>.
     */
    public void setApiKeyHash(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>stroom.api_key.api_key_hash</code>.
     */
    public String getApiKeyHash() {
        return (String) get(7);
    }

    /**
     * Setter for <code>stroom.api_key.api_key_prefix</code>.
     */
    public void setApiKeyPrefix(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>stroom.api_key.api_key_prefix</code>.
     */
    public String getApiKeyPrefix() {
        return (String) get(8);
    }

    /**
     * Setter for <code>stroom.api_key.expires_on_ms</code>.
     */
    public void setExpiresOnMs(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>stroom.api_key.expires_on_ms</code>.
     */
    public Long getExpiresOnMs() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>stroom.api_key.name</code>.
     */
    public void setName(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>stroom.api_key.name</code>.
     */
    public String getName() {
        return (String) get(10);
    }

    /**
     * Setter for <code>stroom.api_key.comments</code>.
     */
    public void setComments(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>stroom.api_key.comments</code>.
     */
    public String getComments() {
        return (String) get(11);
    }

    /**
     * Setter for <code>stroom.api_key.enabled</code>.
     */
    public void setEnabled(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>stroom.api_key.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>stroom.api_key.hash_algorithm</code>.
     */
    public void setHashAlgorithm(Byte value) {
        set(13, value);
    }

    /**
     * Getter for <code>stroom.api_key.hash_algorithm</code>.
     */
    public Byte getHashAlgorithm() {
        return (Byte) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, Integer, Long, String, Long, String, String, String, String, Long, String, String, Boolean, Byte> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Integer, Integer, Long, String, Long, String, String, String, String, Long, String, String, Boolean, Byte> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ApiKey.API_KEY.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ApiKey.API_KEY.VERSION;
    }

    @Override
    public Field<Long> field3() {
        return ApiKey.API_KEY.CREATE_TIME_MS;
    }

    @Override
    public Field<String> field4() {
        return ApiKey.API_KEY.CREATE_USER;
    }

    @Override
    public Field<Long> field5() {
        return ApiKey.API_KEY.UPDATE_TIME_MS;
    }

    @Override
    public Field<String> field6() {
        return ApiKey.API_KEY.UPDATE_USER;
    }

    @Override
    public Field<String> field7() {
        return ApiKey.API_KEY.FK_OWNER_UUID;
    }

    @Override
    public Field<String> field8() {
        return ApiKey.API_KEY.API_KEY_HASH;
    }

    @Override
    public Field<String> field9() {
        return ApiKey.API_KEY.API_KEY_PREFIX;
    }

    @Override
    public Field<Long> field10() {
        return ApiKey.API_KEY.EXPIRES_ON_MS;
    }

    @Override
    public Field<String> field11() {
        return ApiKey.API_KEY.NAME;
    }

    @Override
    public Field<String> field12() {
        return ApiKey.API_KEY.COMMENTS;
    }

    @Override
    public Field<Boolean> field13() {
        return ApiKey.API_KEY.ENABLED;
    }

    @Override
    public Field<Byte> field14() {
        return ApiKey.API_KEY.HASH_ALGORITHM;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public Long component3() {
        return getCreateTimeMs();
    }

    @Override
    public String component4() {
        return getCreateUser();
    }

    @Override
    public Long component5() {
        return getUpdateTimeMs();
    }

    @Override
    public String component6() {
        return getUpdateUser();
    }

    @Override
    public String component7() {
        return getFkOwnerUuid();
    }

    @Override
    public String component8() {
        return getApiKeyHash();
    }

    @Override
    public String component9() {
        return getApiKeyPrefix();
    }

    @Override
    public Long component10() {
        return getExpiresOnMs();
    }

    @Override
    public String component11() {
        return getName();
    }

    @Override
    public String component12() {
        return getComments();
    }

    @Override
    public Boolean component13() {
        return getEnabled();
    }

    @Override
    public Byte component14() {
        return getHashAlgorithm();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public Long value3() {
        return getCreateTimeMs();
    }

    @Override
    public String value4() {
        return getCreateUser();
    }

    @Override
    public Long value5() {
        return getUpdateTimeMs();
    }

    @Override
    public String value6() {
        return getUpdateUser();
    }

    @Override
    public String value7() {
        return getFkOwnerUuid();
    }

    @Override
    public String value8() {
        return getApiKeyHash();
    }

    @Override
    public String value9() {
        return getApiKeyPrefix();
    }

    @Override
    public Long value10() {
        return getExpiresOnMs();
    }

    @Override
    public String value11() {
        return getName();
    }

    @Override
    public String value12() {
        return getComments();
    }

    @Override
    public Boolean value13() {
        return getEnabled();
    }

    @Override
    public Byte value14() {
        return getHashAlgorithm();
    }

    @Override
    public ApiKeyRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ApiKeyRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public ApiKeyRecord value3(Long value) {
        setCreateTimeMs(value);
        return this;
    }

    @Override
    public ApiKeyRecord value4(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public ApiKeyRecord value5(Long value) {
        setUpdateTimeMs(value);
        return this;
    }

    @Override
    public ApiKeyRecord value6(String value) {
        setUpdateUser(value);
        return this;
    }

    @Override
    public ApiKeyRecord value7(String value) {
        setFkOwnerUuid(value);
        return this;
    }

    @Override
    public ApiKeyRecord value8(String value) {
        setApiKeyHash(value);
        return this;
    }

    @Override
    public ApiKeyRecord value9(String value) {
        setApiKeyPrefix(value);
        return this;
    }

    @Override
    public ApiKeyRecord value10(Long value) {
        setExpiresOnMs(value);
        return this;
    }

    @Override
    public ApiKeyRecord value11(String value) {
        setName(value);
        return this;
    }

    @Override
    public ApiKeyRecord value12(String value) {
        setComments(value);
        return this;
    }

    @Override
    public ApiKeyRecord value13(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public ApiKeyRecord value14(Byte value) {
        setHashAlgorithm(value);
        return this;
    }

    @Override
    public ApiKeyRecord values(Integer value1, Integer value2, Long value3, String value4, Long value5, String value6, String value7, String value8, String value9, Long value10, String value11, String value12, Boolean value13, Byte value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApiKeyRecord
     */
    public ApiKeyRecord() {
        super(ApiKey.API_KEY);
    }

    /**
     * Create a detached, initialised ApiKeyRecord
     */
    public ApiKeyRecord(Integer id, Integer version, Long createTimeMs, String createUser, Long updateTimeMs, String updateUser, String fkOwnerUuid, String apiKeyHash, String apiKeyPrefix, Long expiresOnMs, String name, String comments, Boolean enabled, Byte hashAlgorithm) {
        super(ApiKey.API_KEY);

        setId(id);
        setVersion(version);
        setCreateTimeMs(createTimeMs);
        setCreateUser(createUser);
        setUpdateTimeMs(updateTimeMs);
        setUpdateUser(updateUser);
        setFkOwnerUuid(fkOwnerUuid);
        setApiKeyHash(apiKeyHash);
        setApiKeyPrefix(apiKeyPrefix);
        setExpiresOnMs(expiresOnMs);
        setName(name);
        setComments(comments);
        setEnabled(enabled);
        setHashAlgorithm(hashAlgorithm);
        resetChangedOnNotNull();
    }
}
